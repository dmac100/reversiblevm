<?xml version='1.0'?>
<languages>
	<language name="Java" extension="java" brush="BrushJava">
		<compiler>javac -encoding utf-8 -cp $CLASSPATH $NAME.$EXT</compiler>
		<run>java -cp $CLASSPATH $NAME</run>
		<standardImportJar>/opt/icedtea-bin-7.2.4.1/jre/lib/rt.jar</standardImportJar>
		<defaultClasspath>.:/home/david/programming/java/lib:/home/david/programming/java/lib/*</defaultClasspath>
		<filenameMatcher>(?s)public +class +([\w\d]+)((?!class).)*public +static +void +main *\(</filenameMatcher>
		<template>
			<![CDATA[
import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;
import java.io.*;

import org.junit.*;
import org.junit.Assert.*;
import static org.junit.Assert.*;

import jsconsole.JsConsole;

public class Main {
	public Main() {
	}

	public static void main(String[] args) throws Exception {
		System.out.println("Hello World!");
		
		//new Main();
		//ConsoleTest.testClass(Main.class);
		//new JsConsole().addVariable("main", new Main()).waitForExit();
	}
}
			]]>
		</template>
	</language>

	<language name="Java8" extension="java" brush="BrushJava">
		<compiler>/home/david/opt/jdk1.8.0/bin/javac -encoding utf-8 -cp $CLASSPATH $NAME.$EXT</compiler>
		<run>/home/david/opt/jdk1.8.0/bin/java -cp $CLASSPATH $NAME</run>
		<standardImportJar>/home/david/opt/jdk1.8.0/jre/lib/rt.jar</standardImportJar>
		<defaultClasspath>.:/home/david/programming/java/lib:/home/david/programming/java/lib/*</defaultClasspath>
		<filenameMatcher>(?s)public +class +([\w\d]+)((?!class).)*public +static +void +main *\(</filenameMatcher>
		<template>
			<![CDATA[
import java.util.*;
import java.util.function.*;
import java.util.stream.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;
import java.io.*;

import org.junit.*;
import org.junit.Assert.*;
import static org.junit.Assert.*;

import jsconsole.JsConsole;

public class Main {
	public Main() {
	}

	public static void main(String[] args) throws Exception {
		System.out.println("Hello World!");
		
		//new Main();
		//ConsoleTest.testClass(Main.class);
		//new JsConsole().addVariable("main", new Main()).waitForExit();
	}
}
			]]>
		</template>
	</language>

	<language name="Scala" extension="scala" brush="BrushScala">
		<compiler>scalac -cp $CLASSPATH $NAME.$EXT</compiler>
		<run>scala -cp $CLASSPATH $NAME</run>
		<template>
			<![CDATA[
object Main {
	def main(args:Array[String]) {
		println("Hello World!");
	}
}
			]]>
		</template>
	</language>

	<language name="C" extension="c" brush="BrushCpp">
		<compiler>gcc -o main $NAME.$EXT</compiler>
		<template>
			<![CDATA[
#include <stdio.h>

int main(int argc, char *argv[]) {
	printf("Hello World!\n");
	return 0;
}
			]]>
		</template>
	</language>

	<language name="C++" extension="cpp" brush="BrushCpp">
		<compiler>g++ -o main $NAME.$EXT</compiler>
		<template>
			<![CDATA[
#include <iostream>

int main(int argc, char *argv[]) {
	std::cout << "Hello World!" << std::endl;
	return 0;
}
			]]>
		</template>
	</language>

	<language name="Haskell" extension="hs" brush="BrushHaskell">
		<compiler>ghc -o main $NAME.$EXT</compiler>
		<template>
			<![CDATA[
main = print $ "Hello World!"
			]]>
		</template>
	</language>

	<language name="Mono" extension="cs" brush="BrushCSharp">
		<compiler>gmcs -out:main $NAME.$EXT</compiler>
		<run>mono main</run>
		<template>
			<![CDATA[
using System;

class Prog {
	public static void Main(string[] args) {
		Console.WriteLine("Hello World!");
	}
}
			]]>
		</template>
	</language>

	<language name="Pascal" extension="ps" brush="BrushDelphi">
		<compiler>fpc -omain $NAME.$EXT</compiler>
		<template>
			<![CDATA[
program main;

begin
	WriteLn('Hello World!');
end.
			]]>
		</template>
	</language>

	<language name="Prolog" extension="pl" brush="BrushPlain">
		<run>swipl -t main -l $NAME.$EXT</run>
		<template>
			<![CDATA[
main :- write('Hello World!'), nl.
			]]>
		</template>
	</language>

	<language name="XSLT" extension="xslt" brush="BrushXml">
		<run>xsltproc $NAME.$EXT -</run>
		<template>
			<![CDATA[
<?xml version='1.0' encoding='UTF-8'?>
<xsl:stylesheet xmlns:xsl='http://www.w3.org/1999/XSL/Transform' version='1.0'>
	<xsl:output method='xml' indent='yes'/>
	<xsl:template match='*'>
		<xsl:copy><xsl:apply-templates/></xsl:copy>
	</xsl:template>
</xsl:stylesheet>
			]]>
		</template>
		<defaultInput>
			<![CDATA[
<?xml version='1.0' encoding='UTF-8'?>
<xml></xml>
			]]>
		</defaultInput>
	</language>

	<language name="CoffeeScript" extension="coffee" brush="BrushPlain">
		<run>coffee $NAME.$EXT</run>
		<template>
			<![CDATA[
console.log 'Hello World!'
			]]>
		</template>
	</language>

	<language name="PHP" extension="php" brush="BrushPhp">
		<run>php $NAME.$EXT</run>
		<template>
			<![CDATA[
<?php

print("Hello World!\n");

?>
			]]>
		</template>
	</language>

	<language name="JavaScript" extension="js" brush="BrushJScript">
		<run>js $NAME.$EXT</run>
		<template>
			<![CDATA[
print('Hello World!');
			]]>
		</template>
	</language>

	<language name="Perl" extension="pl" brush="BrushPerl">
		<run>perl $NAME.$EXT</run>
		<template>
			<![CDATA[
print 'Hello World!'
			]]>
		</template>
	</language>

	<language name="Ruby" extension="rb" brush="BrushRuby">
		<run>ruby $NAME.$EXT</run>
		<template>
			<![CDATA[
puts 'Hello World!'
			]]>
		</template>
	</language>

	<language name="Python" extension="py" brush="BrushPython">
		<run>python $NAME.$EXT</run>
		<template>
			<![CDATA[
print('Hello World!');
			]]>
		</template>
	</language>

	<language name="Groovy" extension="groovy" brush="BrushGroovy">
		<run>groovy $NAME.$EXT</run>
		<template>
			<![CDATA[
println 'Hello World!'
			]]>
		</template>
	</language>
</languages>
